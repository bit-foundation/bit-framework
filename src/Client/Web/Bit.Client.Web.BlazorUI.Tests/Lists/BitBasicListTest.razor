@*@typeparam TItem*@
<div style="height:500px;overflow:auto">
    <BitBasicList Items="people" LoadingText="@LoadingText" Virtualize="Virtualize" ItemPerPage="ItemPerPage" Role="@Role">
        <RowTemplate Context="person">
            <div style=" border: 2px #8a8886 solid; border-radius: 10px; padding: 5px 20px; margin: 10px;" class="testItem">
                <p>Id : <strong>@person.Id</strong></p>
                <p>Full Name :<strong>@person.FirstName @person.LastName</strong>  </p>
                <p>Job: <strong>@person.Job</strong></p>
            </div>
        </RowTemplate>
    </BitBasicList>
</div>


@code {
    [Parameter] public ICollection<Person> Items { get; set; }
    [Parameter] public int? ItemPerPage { get; set; }
    [Parameter] public string Role { get; set; } = "list";
    [Parameter] public bool Virtualize { get; set; } = true;
    [Parameter] public string? LoadingText { get; set; }
    [Parameter] public int OverscanCount { get; set; } = 3;
    [Parameter] public int ItemSize { get; set; } = 50;
    [Parameter] public RenderFragment<Person> RowTemplate { get; set; }

    private List<Person> people = new List<Person>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        for (int i = 1; i < 1000; i++)
        {
            people.Add(new Person
            {
                Id = i,
                FirstName = $"Person {i.ToString()}",
                LastName = $"Person Family {i.ToString()}",
                Job = $"Programmer {i.ToString()}"
            });
        }
    }
    public class Person
    {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Job { get; set; }
    }
}
